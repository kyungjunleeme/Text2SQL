name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: pipx install uv

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml', 'uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Sync deps (uv)
        run: uv sync

      # ✅ DuckDB 파일 생성 (NYC Taxi 3M 샘플 로드)
      - name: Build NYC DuckDB
        env:
          DBT_ROOT: ${{ github.workspace }}   # profiles.yml에서 사용하는 루트 경로
        run: uv run python scripts/sync_to_duckdb.py

      # (선택) DuckDB 내용 sanity check
      - name: Sanity check nyc.trips_small
        run: |
          python - <<'PY'
          import duckdb
          con = duckdb.connect('data/sync_taxi.duckdb')
          print(con.sql("select count(*) as cnt from nyc.trips_small").fetchall())
          PY

      # ✅ dbt 빌드/테스트 (DuckDB 타깃)
      - name: dbt seed/build/test (duckdb)
        env:
          DBT_PROFILES_DIR: ./dbt
          DBT_ROOT: ${{ github.workspace }}
        run: |
          uv run dbt seed  --project-dir dbt --target duck
          uv run dbt build --project-dir dbt --target duck
          uv run dbt test  --project-dir dbt --target duck

      # (선택) 사이트/리니지까지 같이 만들고 싶으면 아래 단계 추가
      # - name: Build site
      #   run: uv run python scripts/build_site.py
